# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      # TODO: would be nice to automatically set the version and commit it to main / tag
      # - name: Set Version
      #   run: poetry version ${{ steps.tag.outputs.tag }}
      - name: Get current version
        id: current_version
        run: echo "current_version=$(poetry version --short)" >> $GITHUB_OUTPUT
      - name: Check Version Match
        if: steps.tag.outputs.tag != steps.current_version.outputs.CURRENT_VERSION
        run: echo "version tag is NOT alined" && exit 1
      - name: Install library
        run: poetry install --no-interaction --with dev
      - name: Test with pytest
        run: |
          poetry run pytest
      - name: Configure PyPi
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
      - name: Build package
        run: poetry publish --build
